//Sistem 0.3
#include <UTFT.h>
#include "DHT.h"
#include <OneWire.h>
#include <DallasTemperature.h>

//Sensable pinovi multiplexor
int inh = A0;
int A = A3;
int B = A2;
int C = A1;

//parametri
float PH=0;
int ORP=0;
unsigned int EC=0;
unsigned int PPM=0;
float AH=0;
float AT=0;
float WT1=0;
float WT2=0;

//Atlas sajentifik data reading
char stamp_data[50];
byte holding;

//kanali na multiplexoru do 8;
int AHT = 0;
int gPH = 1;
int gORP = 2;
int gEC = 3;
int DO = 4;
int DT = 5;

//set za lcd
UTFT myGLCD(CTE70,38,39,40,41);

//fontovi
extern uint8_t DotMatrix_M[];
extern uint8_t SevenSegmentFull[];
extern uint8_t SmallFont[];


void getProbe(int probe) {
  Serial3.begin(38400);
    openProbeChannel(probe);
    delay(10);
    Serial3.print("R\r");
    delay(200);
    holding = 0;
    if(Serial3.available() > 1) {
      holding=Serial3.available();  
      for(int i=0; i<holding; i++)
        stamp_data[i]= char(Serial3.read());
        
      if(probe==gPH) PH = atof(stamp_data);
      else if(probe==gEC){
     
      }
      else ORP = atoi(stamp_data);
    }
    else {
    }
    
  Serial3.end();  
}

void getWaterTemp(int probe){
  
  openProbeChannel(probe);
  delay(10);  
  OneWire oneWire(15);
  DallasTemperature sensors(&oneWire);
  int numberOfDevices; 
  DeviceAddress tempDeviceAddress;
  sensors.begin();
  delay(10);
  numberOfDevices = sensors.getDeviceCount();

  
  sensors.requestTemperatures();
  for(int i=0;i<numberOfDevices; i++){
    if(sensors.getAddress(tempDeviceAddress, i)){
      float tempC = sensors.getTempC(tempDeviceAddress);
      if(i == 0){
        WT1=tempC;
      }
      else if (i == 1){
        WT2=tempC;
      }
      delay(100);
    }
  }
}

void getAirHumTemp(int probe){
  DHT dht(15, DHT22);
  dht.begin();
  openProbeChannel(probe);
  delay(10);
  AH = dht.readHumidity();
  AT = dht.readTemperature();
  
  if (isnan(AT) || isnan(AH)) {
    Serial.println("Failed to read from DHT");
  }
}

void openProbeChannel(int channel){
    digitalWrite(inh, HIGH);
    delay(5);
    switch (channel) {
      case 0:                         //open channel Y0
        digitalWrite(A, LOW);        //S0=0
        digitalWrite(B, LOW);        //S1=0
        digitalWrite(C, LOW);        //S2=0
      break;

      case 1:                         //open channel Y1
        digitalWrite(A, HIGH);       //S0=1    
        digitalWrite(B, LOW);        //S1=0
        digitalWrite(C, LOW);        //S2=0
      break;

      case 2:                         //open channel Y2   
        digitalWrite(A, LOW);        //S0=0   
        digitalWrite(B, HIGH);       //S1=1
        digitalWrite(C, LOW);        //S2=0
      break;

      case 3:                         //open channel Y3
        digitalWrite(A, HIGH);       //S0=1    
        digitalWrite(B, HIGH);       //S1=1
        digitalWrite(C, LOW);        //S2=0
      break;
      case 4:                         //open channel Y4
        digitalWrite(A, LOW);        //S0=0  
        digitalWrite(B, LOW);        //S1=0
        digitalWrite(C, HIGH);       //S2=1
      break;

      case 5:                         //open channel Y5
        digitalWrite(A, HIGH);       //S0=1    
        digitalWrite(B, LOW);        //S1=0
        digitalWrite(C, HIGH);       //S2=0
      break;

      case 6:                         //open channel Y6   
        digitalWrite(A, LOW);        //S0=0    
        digitalWrite(B, HIGH);       //S1=1
        digitalWrite(C, HIGH);       //S2=0
      break;

      case 7:                         //open channel Y7
        digitalWrite(A, HIGH);       //S0=1    
        digitalWrite(B, HIGH);       //S1=1
        digitalWrite(C, HIGH);       //S2=0
      break;
      default:
      break;
    }
    digitalWrite(inh, LOW);
    delay(5);
    Serial3.print("\r");  //Get rid of errant data
    delay(5);
}

void getData(){
  
  getProbe(gPH);
  
  getProbe(gORP);
  
  getProbe(gEC);
  
  getAirHumTemp(AHT);
  
  getWaterTemp(DT);
}

void printData(){
  
  //mjenjaj koordinate
  myGLCD.setFont(SevenSegmentFull);
  myGLCD.printNumF(PH,2,50,60);
  myGLCD.printNumF(AH,1,50,110);
  myGLCD.printNumF(AT,1,50,160);
  myGLCD.printNumF(WT1,2,50,210);
  myGLCD.printNumF(WT2,2,50,260);
  myGLCD.printNumI(ORP,50,310);

}

void mainScreen(){
  //ovdje dizajniram matrixa
  myGLCD.clrScr();
  myGLCD.drawRect(5,5,795,475);
  myGLCD.setFont(DotMatrix_M);
  
}

void setup(){
  
  myGLCD.InitLCD();
  myGLCD.clrScr();
  myGLCD.setFont(DotMatrix_M);
  myGLCD.setColor(VGA_BLUE);
  myGLCD.print("LAZIC REEF CONTROLLER",CENTER,100);
  myGLCD.print("VERSION 0.3 ", CENTER,250);
  //dodati logo etfosov, labosov, 
  //i neki koji smislimo naÅ¡ kad budemo znali
  
  pinMode(A, OUTPUT);
  pinMode(B, OUTPUT);
  pinMode(C, OUTPUT);
  pinMode(inh, OUTPUT); 
  digitalWrite(inh, LOW);
  
  getData();
  mainScreen();

}

void loop(){
  
  printData();
  getData();
}
